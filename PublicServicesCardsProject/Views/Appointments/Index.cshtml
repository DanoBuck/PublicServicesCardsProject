@model IEnumerable<PublicServicesCardsProject.Models.Appointment>

@{
    ViewBag.Title = "Appointments";
}
@if (User.IsInRole("Staff") || User.IsInRole("Manager"))
{
    <h2>Appointments</h2>
    if (User.IsInRole("Manager"))
    {
        using (Html.BeginForm())
        {
        <div id="chartdiv" style="width: 100%; height: 400px; background-color: #FFFFFF;"></div>
        <div class="form-group">
            <label class="control-label col-md-2">Office</label>
            <div class="col-md-10">
                @Html.DropDownList("office", "Mine")
                <input type="submit" value="Filter" />
            </div>
        </div>
            }
        }
    <table class="table table-hover">
        <tr>
            <th>
                Office
            </th>
            <th>
                Staff Name
            </th>
            <th>
               Customer Name
            </th>
            <th>
                Appointment Date
            </th>
            <th>
                Appointment  Time
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Building.SafeOffice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Staff.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfAppointment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeOfAppointment)
            </td>
            <td>
                @Html.ActionLink(" Details", "Details", new { id = item.AppointmentId }, htmlAttributes: new { @class = " fa fa-info " }) |
                @Html.ActionLink(" Delete", "Delete", new { id = item.AppointmentId }, htmlAttributes: new { @class = " fa fa-trash-o " })
            </td>
        </tr>
    }

    </table>
}
else
{
    <h2>Make An Appointment</h2>
    if (Model.Count() != 0)
    {
    <table class="table table-hover">
        <tr>
            <th>
                Office
            </th>
            <th>
                Staff Name
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Appointment Date
            </th>
            <th>
                Appointment  Time
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Building.SafeOffice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Staff.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfAppointment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeOfAppointment)
                </td>
                <td>
                    @Html.ActionLink(" Edit", "Edit", new { id = item.AppointmentId }, htmlAttributes: new { @class = " fa fa-edit" }) |
                    @Html.ActionLink(" Details", "Details", new { id = item.AppointmentId }, htmlAttributes: new { @class = " fa fa-info " }) |
                    @Html.ActionLink(" Cancel", "Delete", new { id = item.AppointmentId }, htmlAttributes: new { @class = " fa fa-trash-o " })
                </td>
            </tr>
        }
    </table>
    }
    else {
        <p>
            <button>@Html.ActionLink("New", "Create", new { id = 1 })</button>
        </p>
    }
}

<script src="~/amcharts/amcharts.js"></script>
<script src="~/amcharts/serial.js"></script>
<script src="http://www.amcharts.com/lib/3/plugins/dataloader/dataloader.min.js" type="text/javascript"></script>
<script type="text/javascript">
    AmCharts.makeChart("chartdiv",
				{
				    "type": "serial",
				    "categoryField": "TimeOfAppointment",
				    "dataLoader": {
				        "url": '@Url.Action("GetAppointmentsDataJson")',
				        "format": "json"
				    },
				    "autoMarginOffset": 40,
				    "marginRight": 60,
				    "marginTop": 60,
				    "startDuration": 1,
				    "fontSize": 13,
				    "theme": "light",
				    "categoryAxis": {
				        "gridPosition": "start"
				    },
				    "trendLines": [],
				    "graphs": [
						{
						    "balloonText": "[[title]] of [[category]]:[[value]]",
						    "bullet": "round",
						    "bulletSize": 10,
						    "id": "AmGraph-1",
						    "lineAlpha": 1,
						    "lineThickness": 3,
						    "lineColor": "#004D99",
						    "title": "graph 1",
						    "type": "smoothedLine",
						    "valueField": "AppointmentId"
						}
				    ],
				    "guides": [],
				    "valueAxes": [
						{
						    "id": "ValueAxis-1",
						    "title": ""
						}
				    ],
				    "allLabels": [],
				    "balloon": {},
				    "titles": [],
				});

</script>