
@model PublicServicesCardsProject.Models.Appointment
@{
    ViewBag.Title = "Make Appointment";
}

<h2>Make Appointment</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @if (TempData["Error"] != null)
                {
            <p style="color:red">@TempData["Error"]</p>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BuildingId, "Office", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuildingId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuildingId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffId, "Staff Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StaffId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customer.Name, "Customer Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User", null, htmlAttributes: new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfAppointment, "Appointment Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfAppointment, new { htmlAttributes = new { @class = "form-control"} }) 
                @Html.ValidationMessageFor(model => model.DateOfAppointment, "", new { @class = "text-danger" })
            </div>
        </div>
        @{ 
            var TimeOfAppointments = new SelectList(new List<SelectListItem>
                {
                    new SelectListItem() {Text="09:00", Value="9:00"},
                    new SelectListItem() { Text="10:00", Value="10:00" },
                    new SelectListItem() { Text = "11:00", Value = "11:00" },
                    new SelectListItem() { Text = "12:00", Value = "12:00" },
                    new SelectListItem() { Text = "13:00", Value = "13:00" },
                    new SelectListItem() { Text = "14:00", Value = "14:00" },
                    new SelectListItem() { Text = "15:00", Value = "15:00" },
                    new SelectListItem() { Text = "16:00", Value = "16:00" },
                }, "Value", "Text");
        }

        <div class="form-group">
            @Html.LabelFor(model => model.TimeOfAppointment, "Appointment Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TimeOfAppointment, TimeOfAppointments, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TimeOfAppointment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(document).ready(function () {
        $("#BuildingId").change(function ()
        {
            $("#StaffId").empty();
            $.ajax({
                                type:'POST',
                url: '@Url.Action("GetAllStaffInBuilding")',
                dataType: 'json',
                data: { id: $("#BuildingId").val() },
                success: function (staffs) {
                    $.each(staffs, function (i, staff) {
                        $("#StaffId").append('<option value ="'
                            + staff.StaffId + '">'
                            + staff.Name + '</option');
                                    });
                                },
                error: function (ex) {
                                    alert('Failed' + ex);
                                }
                            });
                            return false;
                        })
    });
</script> @*http://www.devcurry.com/2013/01/aspnet-mvc-cascading-dropdown-list.html*@

<link href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.min.js"></script>
}
